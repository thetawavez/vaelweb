# VAEL Core - Production Environment Configuration
# This file contains settings optimized for production deployment with minimal logging
# and performance-optimized settings. Copy to root .env to activate.
# Last updated: 2025-05-30

#---------------------------------------------
# Flask application configuration
#---------------------------------------------
# Disable debug mode for security in production
FLASK_DEBUG=False
# Use a strong random string for SECRET_KEY in production
FLASK_SECRET_KEY=REPLACE_WITH_STRONG_RANDOM_STRING_IN_PRODUCTION
# Listen on all interfaces (use with reverse proxy)
FLASK_HOST=0.0.0.0
# Default port (will be auto-adjusted by start.sh if occupied)
FLASK_PORT=5000

#---------------------------------------------
# SSL/TLS Configuration (for production)
#---------------------------------------------
# Enable SSL/TLS in production
SSL_ENABLED=True
# Path to SSL certificate file
SSL_CERT_PATH=/etc/ssl/certs/vael.crt
# Path to SSL key file
SSL_KEY_PATH=/etc/ssl/private/vael.key

#---------------------------------------------
# Logging configuration
#---------------------------------------------
# Set to WARNING for minimal output in production
LOG_LEVEL=WARNING
# Disable console logging in production
LOG_TO_CONSOLE=False
# Path for log files (relative to project root)
LOG_DIR=logs
# Maximum log file size in MB before rotation
LOG_MAX_SIZE=50
# Number of backup log files to keep
LOG_BACKUP_COUNT=10
# Enable JSON structured logging for easier parsing
LOG_FORMAT_JSON=True

#---------------------------------------------
# OpenRouter API configuration (for LLM calls)
#---------------------------------------------
# Production placeholder - replace with actual key
# Get your API key from https://openrouter.ai/
OPENROUTER_API_KEY=sk-or-prod-placeholder-key
OPENROUTER_API_URL=https://openrouter.ai/api/v1/chat/completions
# Model to use for LLM calls (robust models for production)
OPENROUTER_MODEL=anthropic/claude-3-opus-20240229
# Request timeout in seconds
OPENROUTER_TIMEOUT=30
# Enable caching to reduce API calls
OPENROUTER_CACHE_ENABLED=True
# Cache expiration time in seconds
OPENROUTER_CACHE_TTL=3600

#---------------------------------------------
# ElevenLabs API configuration (for TTS)
#---------------------------------------------
# Production placeholder - replace with actual key
# Get your API key from https://elevenlabs.io/
ELEVENLABS_API_KEY=sk-prod-placeholder-key
# Default voice ID for TTS
ELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM
# Use native browser TTS as fallback if ElevenLabs fails
TTS_FALLBACK_ENABLED=True
# Enable caching for TTS responses to reduce API calls
TTS_CACHE_ENABLED=True
# Cache expiration time in seconds
TTS_CACHE_TTL=86400

#---------------------------------------------
# Entity configuration
#---------------------------------------------
# Enable/disable individual components
SENTINEL_ENABLED=True
WATCHDOG_ENABLED=True
TWINFLAME_ENABLED=True
NEXUS_ENABLED=True
ANTIBODY_ENABLED=True
LIVINGMAP_ENABLED=True

# Twin Flame configuration
TF_WORKERS_LEFT=2
TF_WORKERS_RIGHT=2
# Use Redis queue for production
TF_QUEUE_BACKEND=redis
TF_QUEUE_HOST=localhost
TF_QUEUE_PORT=6379
TF_QUEUE_DB=0
TF_TIMEOUT_MS=10000

# Watchdog configuration
# Time in seconds before considering a pulse as missed
WATCHDOG_STALE_SEC=15
# Maximum number of restart attempts before giving up
WATCHDOG_MAX_RESTARTS=5
# Enable email notifications for critical failures
WATCHDOG_NOTIFY_EMAIL=admin@example.com

# NEXUS configuration
# Directory for NEXUS rules
NEXUS_RULES_DIR=src/nexus/rules
# Port for NEXUS gRPC service
NEXUS_GRPC_PORT=7007
# Enable threat intelligence feed
NEXUS_THREAT_INTEL_ENABLED=True
# Threat intelligence update interval in hours
NEXUS_THREAT_INTEL_UPDATE_INTERVAL=24

#---------------------------------------------
# Performance optimization
#---------------------------------------------
# Enable response compression
COMPRESSION_ENABLED=True
# Enable response caching
RESPONSE_CACHE_ENABLED=True
# Cache timeout in seconds
RESPONSE_CACHE_TIMEOUT=300
# Maximum number of worker processes
GUNICORN_WORKERS=4
# Maximum number of threads per worker
GUNICORN_THREADS=4
# Maximum number of pending connections
GUNICORN_BACKLOG=2048
# Worker timeout in seconds
GUNICORN_TIMEOUT=120

#---------------------------------------------
# Environment information
#---------------------------------------------
# Web interface mode
VAEL_MODE=web
# Running in container?
VAEL_CONTAINER=True
# Operator name
VAEL_OPERATOR=production

#---------------------------------------------
# Database configuration
#---------------------------------------------
# PostgreSQL for production
DATABASE_URI=postgresql://vael_user:vael_password@localhost:5432/vael_db
# Connection pool settings
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20
DATABASE_POOL_TIMEOUT=30
# Enable database query logging (disable in high-traffic production)
DATABASE_QUERY_LOGGING=False
